import asyncio

import requests
import zipfile
import io
import os

words = [
    'дом', 'море', 'солнце', 'небо', 'лес', 'река', 'гора', 'птица', 'цветок', 'жизнь',
    'любовь', 'работа', 'друг', 'снег', 'вода', 'ветер', 'огонь', 'поля', 'города', 'день',
    'ночь', 'мост', 'улица', 'поезд', 'парк', 'здание', 'площадь', 'дождь', 'собака', 'кошка',
    'свет', 'тень', 'игра', 'песок', 'книга', 'город', 'песня', 'звезда', 'механизм', 'автомобиль',
    'поездка', 'путешествие', 'молоко', 'хлеб', 'яйцо', 'фрукт', 'овощ', 'журнал', 'газета', 'кафе',
    'ресторан', 'рецепт', 'вино', 'чай', 'кофе', 'письмо', 'письменность', 'рука', 'ноги', 'часы',
    'календарь', 'зеркало', 'стол', 'стул', 'диван', 'шкаф', 'завтрак', 'обед', 'ужин', 'горы',
    'реки', 'поля', 'море', 'океан', 'пляж', 'солнечный', 'дождливый', 'ветряный', 'холодный', 'тёплый',
    'лето', 'зима', 'весна', 'осень', 'страна', 'континент', 'планета', 'звезда', 'галактика', 'космос',
    'мир', 'человек', 'семья', 'родители', 'дети', 'сестра', 'брат', 'дедушка', 'бабушка', 'дядя',
    'тётя', 'кукла', 'игрушка', 'тренировка', 'спорт', 'футбол', 'баскетбол', 'волейбол', 'тренер', 'спортзал',
    'кухня', 'спальня', 'ванная', 'коридор', 'гараж', 'сад', 'огород', 'площадка', 'гостинная', 'столовая',
    'интернет', 'телефон', 'компьютер', 'телевизор', 'фильм', 'сериал', 'новости', 'погода', 'прогноз', 'город',
    'посёлок', 'деревня', 'село', 'улица', 'переулок', 'площадь', 'парк', 'горы', 'лес', 'пещера', 'водопад',
    'озеро', 'рыба', 'мясо', 'суп', 'бульон', 'пирог', 'пицца', 'паста', 'салат', 'десерт', 'торт', 'пирожное'
]

# Ссылка на ZIP-файл
url = 'https://stepik.org/media/attachments/lesson/1303132/files_with_secret_word.zip'

# Скачиваем файл
response = requests.get(url)

# Определяем имя папки для сохранения файлов
output_folder = 'unzipped_files'

# Создаем папку, если она не существует
os.makedirs(output_folder, exist_ok=True)

# Открываем как ZIP файл и сохраняем его содержимое в папку
with zipfile.ZipFile(io.BytesIO(response.content)) as archive:
    # Извлекаем все файлы в указанную папку
    archive.extractall(output_folder)


# Открываем каждый файл внутри папки и выводим его содержимое


async def seek_word(file: str):
    with open(file, mode='r', encoding='utf-8') as file:
        file_words = file.readlines()
        for word in file_words:
            if word.strip() not in words:
                print(f'{file.name.split("_")[-1][:-4]}:{word}')
                raise StopIteration


async def main():
    tasks = []
    for filename in os.listdir(output_folder + '/files_with_secret_word/'):
        file_path = os.path.join(output_folder + '/files_with_secret_word/', filename)
        tasks.append(asyncio.create_task(seek_word(file_path)))
    await asyncio.wait(tasks, return_when=asyncio.FIRST_EXCEPTION)


asyncio.run(main())
