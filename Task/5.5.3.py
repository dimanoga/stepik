"""
Представьте, что у вас есть разные сторонние сервисы, отправляющие задания в приложение в виде корутин или объектов Task.
Все эти объекты сохранены в список awaitables в корутине main() (см. шаблон кода).

Вам нужно запустить все задачи и корутины конкурентно и сохранить результаты выполнения в список в том же порядке,
в котором задачи и корутины находятся в списке awaitables. Запускать корутину main() не нужно.

Выберите правильный метод создания задач, при условии, что в списке есть и объекты Task и объекты корутин.

Условия задачи:

Допишите корутину main(), так чтобы она возвращала список результатов всех задач, которые есть в исходном списке
awaitables, в том же порядке.


"""
import asyncio


async def main():
    awaitables = [aw for aw in await get_coros_and_tasks()]
    tasks = [asyncio.ensure_future(aw) for aw in awaitables]
    return await asyncio.gather(*tasks)
