"""
Описание задачи:
Вам необходимо написать код, который одновременно отправляет трех персонажей в путешествие.
Каждый персонаж должен последовательно проходить через пять различных этапов путешествия,
где каждый этап представлен строкой. Эти этапы включают в себя:

places = [
   "начинает путешествие",
   "находит загадочный лес",
   "переправляется через реку",
   "встречает дружелюбного дракона",
   "находит сокровище"]
Между каждым этапом должна быть задержка в одну секунду, чтобы имитировать продолжительность путешествия
и гарантировать необходимый порядок выполнения.

Персонажи путешествия:

Искатель приключений
Храбрый рыцарь
Отважный пират
Каждый персонаж начинает путешествие одновременно с остальными, но каждый из них проходит через этапы независимо.
Ваша задача - использовать асинхронное программирование для эффективного управления путешествиями.

Технические требования:

В главной корутине main() используйте asyncio.create_task() для создания трех асинхронных задач. Каждая задача должна
запускать функцию counter() , передавая в нее уникальное имя персонажа и задержку.
Функция counter() должна быть асинхронной (async def). Внутри нее используйте цикл для итерации по списку этапов
путешествия и await asyncio.sleep(delay) для создания задержки между этапами.
После задержки выводите на экран текущий этап путешествия для данного персонажа.
print(f"{name} {place}...")
Дождитесь выполнения всех созданных задач в главной корутине с помощью await.
"""
import asyncio

places = [
    "начинает путешествие",
    "находит загадочный лес",
    "переправляется через реку",
    "встречает дружелюбного дракона",
    "находит сокровище"]

roles = ["Искатель приключений", "Храбрый рыцарь", "Отважный пират"]


async def counter(name, delay=.1):
    for place in places:
        await asyncio.sleep(delay)
        print(f"{name} {place}...")


async def main():
    task1 = asyncio.create_task(counter(roles[0]))
    task2 = asyncio.create_task(counter(roles[1]))
    task3 = asyncio.create_task(counter(roles[2]))

    # Дождитесь выполнения всех созданных задач в главной корутине с помощью await.
    await asyncio.gather(task1, task3, task2)


asyncio.run(main())
