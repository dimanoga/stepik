"""
Напишите асинхронный код, который запускает два таймера обратного отсчета с разным временем и названиями.

Один таймер - это "Квест на поиск сокровищ", который длится 10 секунд.
Второй - "Побег от дракона", на выполнение которого дается 5 секунд.
Используйте asyncio.create_task() для запуска каждого таймера.
Таймер должен выводить оставшееся время в сообщениях, примеры которых представлены ниже.



Допишите функцию countdown(), которая принимает два аргумента: name (имя приключения)
и seconds (количество секунд для обратного отсчета). Функция должна выводить сообщение с обратным отсчетом каждую секунду.

Для "Квеста на поиск сокровищ" сообщение должно мотивировать пользователя найти сокровища,
Квест на поиск сокровищ: Осталось 10 сек. Найди скрытые сокровища!

print(f"{name}: Осталось {i} сек. Найди скрытые сокровища!")


Для "Побега от дракона" - побуждать пользователя бежать быстрее.

Побег от дракона: Осталось 5 сек. Беги быстрее, дракон на хвосте!

print(f"{name}: Осталось {i} сек. Беги быстрее, дракон на хвосте!")
В главной корутине main() используйте asyncio.create_task() для создания и запуска двух асинхронных задач:
 одна для "Квеста на поиск сокровищ" на 10 секунд, другая - для "Побега от дракона" на 5 секунд.

Используйте await asyncio.gather(...) для одновременного ожидания завершения обеих задач.
Это позволит вашим приключениям прогрессировать конкурентно.

Завершение задачи: По завершении обратного отсчета каждая задача должна выводить сообщение о том,
что приключение завершено и спрашивать у пользователя, что делать дальше.
"""
import asyncio


async def countdown(name: str, seconds: int):
    if name == "Квест на поиск сокровищ":
        for i in range(seconds, 0, -1):
            print(f"{name}: Осталось {i} сек. Найди скрытые сокровища!")
            await asyncio.sleep(1)
    elif name == "Побег от дракона":
        for i in range(seconds, 0, -1):
            print(f"{name}: Осталось {i} сек. Беги быстрее, дракон на хвосте!")
            await asyncio.sleep(1)
    print(f"{name}: Задание выполнено! Что дальше?")


async def main():
    treasure_hunt = asyncio.create_task(countdown("Квест на поиск сокровищ", 10))
    dragon_escape = asyncio.create_task(countdown("Побег от дракона", 5))
    await asyncio.gather(treasure_hunt, dragon_escape)


asyncio.run(main())
