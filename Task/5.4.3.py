"""
Вам предоставлен список из 100 новостных заголовков.

news_list = [
    "Новая волна COVID-19 обрушилась на Европу",
    "Рынки акций растут на фоне новостей о вакцине",
     ....
     ....
     ....
     # Остальные вшиты в задачу
Ваша задача — создать асинхронную программу с тремя задачами, которые анализируют
этот список на предмет наличия определенных ключевых слов:

"COVID-19"
"игр"
"новый вид"
Каждая корутина должна иметь какую-то задержку перед началом работы, чтобы имитировать длительную операцию
обработки данных. При обнаружении совпадения ключевого слова в новостном заголовке, корутина выводит сообщение
о найденном соответствии, указывая ключевое слово и соответствующий заголовок новости.

Найдено соответствие для 'COVID-19': Новая волна COVID-19 обрушилась на Европу
Найдено соответствие для 'игр': Конференция разработчиков игр пройдет онлайн
Найдено соответствие для 'новый вид': Открыт новый вид подводных животных


print(f"Найдено соответствие для '{keyword}': {news}")
"""
import asyncio

news_list = ['Новая волна COVID-19 обрушилась на Европу', 'Рынки акций растут на фоне новостей о вакцине',
             'Конференция разработчиков игр пройдет онлайн', 'В мире увеличивается число электромобилей',
             'Искусственный интеллект победил чемпиона мира по шахматам',
             'Климатические изменения вызывают обеспокоенность ученых', 'Новый вид мошенничества в интернете',
             'Президент анонсировал новые экономические реформы', 'Открыт новый вид подводных животных',
             'Спортивные мероприятия будут проводиться без зрителей',
             'Новые исследования о влиянии COVID-19 на здоровье', 'Вакцинация от COVID-19 становится обязательной',
             'COVID-19: новые ограничения вводятся в странах', 'Пандемия COVID-19: как защитить себя и близких',
             'COVID-19 изменяет формат образования', 'COVID-19: последствия для мировой экономики',
             'Новые штаммы COVID-19 обнаружены в Азии', 'COVID-19: вакцины показывают высокую эффективность',
             'Путешествия во времена COVID-19: что нужно знать', 'COVID-19 и его влияние на спортивные соревнования',
             'Выставка игр E3 переходит в онлайн-формат', 'Разработчики анонсировали новую игру в жанре RPG',
             'Игры для VR: новые возможности и перспективы', 'Киберспорт: растущая популярность в мире игр',
             'Игры на мобильных: топ-10 новинок года', 'Инди-игры: как небольшие студии меняют индустрию',
             'Игровые технологии: новые тренды и разработки', 'Игры как инструмент обучения и развития',
             'Большие скидки на игры в честь праздников', 'Соревнования по видеоиграм привлекают миллионы зрителей',
             'Открытие нового вида растений в Амазонии', 'Ученые обнаружили новый вид глубоководных рыб',
             'Новый вид птиц найден на острове Мадагаскар', 'Исследователи описали новый вид насекомых',
             'Новый вид млекопитающих обнаружен в Африке', 'Описание нового вида змей из Юго-Восточной Азии',
             'Новый вид динозавров: открытие столетия', 'Обнаружен новый вид микроорганизмов в океане',
             'Новый вид акул найден у побережья Австралии', 'Ученые открыли новый вид пресмыкающихся в пустыне',
             'Мировые лидеры собираются на экономический форум',
             'Технологии блокчейна вносят изменения в финансовый мир',
             'Роботы-собаки используются для доставки заказов', 'Изменение климата: новые вызовы для человечества',
             'Прорыв в лечении рака: новые методы терапии', 'Международный космический корабль отправлен к Марсу',
             'Экологически чистые технологии набирают популярность',
             'Знаменитый художник представил новую коллекцию картин', 'Новые археологические находки изменяют историю',
             'Уникальное явление: суперлуние можно будет наблюдать этой ночью']


async def analyze_news(keyword: str, news_list: list[str], delay: int | float):
    for news in news_list:

        if keyword in news:
            await asyncio.sleep(delay)
            print(f"Найдено соответствие для '{keyword}': {news}")


async def main():
    # Создаем асинхронные задачи для каждой корутины с разными ключевыми словами и задержками
    task1 = asyncio.create_task(analyze_news("COVID-19", news_list, 1))
    task2 = asyncio.create_task(analyze_news("игр", news_list, 1))
    task3 = asyncio.create_task(analyze_news("новый вид", news_list, 1))

    # Ожидаем выполнения всех задач
    await asyncio.gather(task1, task2, task3)


asyncio.run(main())
