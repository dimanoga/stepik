"""
Ваша задача: дополнить функцию main(), чтобы три студента — Алекс, Мария и Иван — могли читать книги асинхронно.
 Все студенты начинают читать, но из-за различной скорости чтения заканчивают чтение они в разное время.
 Используя асинхронное программирование и функцию asyncio.create_task(), вы должны сделать так,
 чтобы каждый студент начал и закончил чтение в соответствии со своим индивидуальным временем.

Функция read_book() принимает имя студента и время, необходимое ему для чтения книги. Порядок вывода сообщений должен
отражать реальный порядок начала и завершения чтения.

async def read_book(student, time):
    print(f"{student} начал читать книгу.")
    await asyncio.sleep(time)
    print(f"{student} закончил читать книгу за {time} секунд.")
Ваша версия функции main() должна асинхронно запустить чтение книг для этих студентов:

Алекс — 5 секунд,
Мария — 3 секунды
Иван — 4 секунды

"""

import asyncio


async def read_book(student, time):
    print(f"{student} начал читать книгу.")
    await asyncio.sleep(time)
    print(f"{student} закончил читать книгу за {time} секунд.")


async def main():
    # Создаем задачи для асинхронного выполнения
    tasks = [read_book(student, time) for student, time in
             zip(["Алекс", "Мария", 'Иван'], [5, 3, 4])]
    await asyncio.gather(*tasks)


asyncio.run(main())
